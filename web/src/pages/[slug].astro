---
import type { InferGetStaticParamsType } from "astro";
import Layout from "../layouts/Layout.astro";
import { formatDate } from "../utils";
import { getPost, getPages } from "../utils/sanity";

import Sections from "@components/rocks/sections";

export async function getStaticPaths() {
  const posts = await getPages();
  const paths = posts?.map(post => ({
    params: { slug: post.slug?.current }
  }));

  return paths;
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params;

const post = await getPost(slug!);
const postSerialized = JSON.stringify(post, null, 2);
console.log(postSerialized);
---

<Layout title={post?.title!}>
  <section class="post">
    <div class="post__container">
      <h1 class="post__title">{post?.title}</h1>
      <p class="post__date">
        {formatDate(post?._updatedAt)}
      </p>
      <div class="post__content">
        {post.sections && <Sections data={post.sections} client:visible />}
      </div>
    </div>
    <pre>{postSerialized}</pre>
  </section>
</Layout>
